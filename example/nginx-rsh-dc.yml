apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/deployment.cancelled: "14"
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    app: nginx
    deploymentconfig: nginx
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/container.nginx.image.entrypoint: '["nginx","-g","daemon off;"]'
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: nginx
        deploymentconfig: nginx
    spec:
      containers:
      - image: 172.30.67.71:5000/nginx/nginx:latest
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/cache/nginx
          name: volume-cache
        - mountPath: /etc/nginx/conf.d
          name: volume-etc
        - mountPath: /templates
          name: volume-templates
      - image: 172.30.67.71:5000/nginx/nginx-dynsvc:latest
        imagePullPolicy: Always
        name: nginx-dynsvc
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: volume-etc
        - mountPath: /templates
          name: volume-templates
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: volume-cache
      - emptyDir: {}
        name: volume-etc
      - configMap:
          name: templates
        name: volume-templates
  test: false
  triggers:
  - imageChangeParams:
      containerNames:
      - nginx-dynsvc
      from:
        kind: ImageStreamTag
        name: nginx-dynsvc:latest
    type: ImageChange
status: {}
